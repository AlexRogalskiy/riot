plugins {
    id 'application'
    id 'java'
    id 'maven-publish'
    id 'net.nemerosa.versioning' version '2.8.2'
    id 'org.asciidoctor.convert' version '1.5.9.2'
}

dependencies {
    compile 'org.slf4j:slf4j-api:1.7.26'
    compile 'org.slf4j:slf4j-jdk14:1.7.26'
    compile 'info.picocli:picocli:4.0.3'
    compile 'org.springframework.batch:spring-batch-core:4.1.2.RELEASE'
    compile 'org.springframework.boot:spring-boot-autoconfigure:2.1.6.RELEASE'
    compile 'org.springframework:spring-jdbc:5.1.6.RELEASE'
    compile 'com.zaxxer:HikariCP:3.2.0'
    compile 'com.redislabs:lettusearch:1.5.1'
    compile 'org.apache.commons:commons-pool2:2.6.1'
    compile 'org.latencyutils:LatencyUtils:2.0.3'
    compile 'redis.clients:jedis:3.1.0'
    compile 'com.redislabs:jredisearch:1.0.0'
    compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.9.8'
    compile 'com.github.javafaker:javafaker:0.18'
    compile 'org.slf4j:jcl-over-slf4j:1.7.26'
    testCompile 'org.junit.jupiter:junit-jupiter-engine:5.5.1'
    testCompile 'org.hsqldb:hsqldb:2.4.1'
}

test {
    useJUnitPlatform()
}

group = 'com.redislabs'
version = versioning.info.display
description = 'RIOT'
sourceCompatibility = '1.8'

application {
	mainClassName = 'com.redislabs.riot.Riot'
}

jar {
    manifest {
        attributes("Implementation-Title": "RIOT",
                   "Implementation-Version": version)
    }
}

tasks.withType(Tar){
    compression = Compression.GZIP
}

asciidoctor {
  outputDir = file('docs')
  separateOutputDirs = false
}