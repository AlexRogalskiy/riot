flows:
- name: stores
  file:
    path: /Users/jruaux/DocumentsRL/Customers/Gap ICM/InventoryPoC/GapLogInventoryForPOC/DC_Stores.csv
    delimited:
      header: true
  redis:
  - hash:
      keyspace: node
      keys: DC_ID
  - set:
      keyspace: nodes
      fields: DC_ID
- name: stores-geo
  file:
    path: /Users/jruaux/DocumentsRL/Customers/Gap ICM/InventoryPoC/GapLogInventoryForPOC/DC_GEOADDR.csv
    delimited:
      header: true
  processor:
    fields:
      LOCATION: "containsKey('LONGITUDE')?LONGITUDE.concat(',').concat(LATITUDE):null"
  redis:
  - hash:
      keyspace: node
      keys: DC_ID
- name: stores-brand
  file:
    path: /Users/jruaux/DocumentsRL/Customers/Gap ICM/InventoryPoC/GapLogInventoryForPOC/DC_BRD_ASSN.csv
    delimited:
      header: true
  redis:
  - hash:
      keyspace: node
      keys: DC_ID
- name: stores-gen
  max-item-count: 3568
  generator:
    fields:
      DC_ID: "#sequence.nextMember('nodes')"
      GIFTWRAP: "bool.bool"
      NEXTDAY: "bool.bool"
      POBOX: "bool.bool"
  redis:
  - hash:
      keyspace: node
      keys: DC_ID
- name: stock
  max-item-count: 10000
  partitions: 10
  generator:
    fields:
      DC_ID: "#sequence.nextMember('nodes')"
      SKU: "#context.nextId(20000,'%09d')"
  processor:
    merge: "#redis.hgetall('node:'.concat(DC_ID))"
  redis:
  - search:
      keyspace: stock
      keys: DC_ID,SKU
      schema:
      - name: DC_ID
        sortable: true
      - name: SKU
        sortable: true
      - name: GID_MKT_CD
        sortable: true
      - name: DC_TYP_CD
        sortable: true
      - name: DC_DESC
      - name: CITY_NM
        sortable: true
      - name: ST_PROV_CD
        sortable: true
      - name: CTRY_CD
        sortable: true
      - name: BRD_CD
        sortable: true
      - name: LOCATION
        type: geo
      - name: GIFTWRAP
        sortable: true
      - name: NEXTDAY
        sortable: true
      - name: POBOX
        sortable: true            
      - name: ONHAND
        type: numeric
        sortable: true
      - name: HOLD
        type: numeric
        sortable: true
      - name: RESERVED
        type: numeric
        sortable: true
      - name: ALLOCATED
        type: numeric
        sortable: true
      - name: BACKORDERED
        type: numeric
        sortable: true
      - name: EXCLUDED
        type: numeric
        sortable: true
#  stock-update:
#    max-item-count: -1
#    reader:
#      generator:
#        map: "number.randomDoubleMap(0,0,100,'ONHAND','HOLD','RESERVED','ALLOCATED','BACKORDERED','EXCLUDED')"
#        fields:
#          DC_ID: "#sequence.nextMember('nodes')"
#          SKU: "sequence.next('sku',1,22400,'%09d')"
#    writers:
#    - redis:
#        keyspace: stock
#        keys: DC_ID,SKU
#        search:
#          replace: true
#          replacePartial: true